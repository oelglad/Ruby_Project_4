{"version":3,"sources":["services/api_helper.js","components/Carousel.js","components/SingleHotel.js","components/ReservationForm.js","components/ReservationContainer.js","components/CreateHotelList.js","components/HotelForm.js","components/HotelsContainer.js","components/Overview.js","components/Home.js","components/LoginForm.js","components/Header.js","components/Footer.js","components/SignUpForm.js","components/UpdateReservationForm.js","App.js","serviceWorker.js","index.js"],"names":["api","axios","create","baseURL","loginUser","loginData","a","post","resp","console","log","defaults","headers","common","authorization","data","auth_token","localStorage","setItem","user","registerUser","registerData","name","email","verifyUser","token","getItem","indexHotels","get","postHotel","postData","indexReservations","id","postReservation","putReservation","hotId","resId","put","deleteReservation","res","hot","delete","HotelCarousel","showThumbs","infiniteLoop","emulateTouch","showStatus","swipeable","autoPlay","dynamicHeight","useKeyboardArrows","centerMode","transitionTime","className","src","alt","Component","SingleHotel","props","setCurrentHotel","componentDidMount","hotels","length","currentHotel","find","hotel","parseInt","hotelId","reservations","setState","deleteRes","formData","reservation_id","hotel_id","updateRes","state","hotel_name","test","prevProps","this","to","map","reservation","reservation_desc","onClick","ReservationForm","handleChange","e","target","value","room_type","guest_no","start_date","end_date","onSubmit","preventDefault","createReservation","htmlFor","type","onChange","ReservationContainer","getAllReservations","reservationData","newReservation","history","push","updateReservation","updatedReservation","changedReservations","exact","path","render","match","params","withRouter","CreateHotelList","key","img_url","city","zip_code","HotelForm","biography","createHotel","HotelContainer","getAllHotels","hotelData","newHotel","Overview","Home","LoginForm","password","handleLogin","Header","Footer","SignUpForm","errorText","handleRegister","UpdateReservationForm","App","currentUser","errorMessage","handleLogout","removeItem","res_id","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.84027068.chunk.js","sourcesContent":["import axios from 'axios';\n\n\nconst api = axios.create({\n    baseURL: \"http://localhost:3000\"\n})\n\n//Login\nexport const loginUser = async (loginData) => {\n    const resp = await api.post('/auth/login', loginData);\n    console.log(resp);\n    api.defaults.headers.common.authorization = `Bearer ${resp.data.auth_token}`;\n    localStorage.setItem('authToken', resp.data.auth_token);\n    // localStorage.setItem('name', resp.data.user.name);\n    // localStorage.setItem('email', resp.data.user.email);\n    return resp.data.user;\n  }\n\n\n  //Register\n\n  export const registerUser = async(registerData) => {\n      // try{\n        const resp = await api.post('/signup', registerData);\n        api.defaults.headers.common.authorization = `Bearer ${resp.data.auth_token}`;\n        localStorage.setItem('authToken', resp.data.auth_token);\n        localStorage.setItem('name', resp.data.user.name);\n        localStorage.setItem('email', resp.data.user.email);\n        return resp.data.user;\n      // }catch (e) {\n      //   console.log(e.response);\n      //   if (e.respose.status === 422) {\n      //     return {errorMessage: \"Email is already associated with a user, please login to continue\"}\n      //   }\n      // }\n  }\n\n  //Verify user\n  export const verifyUser = () => {\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      api.defaults.headers.common.authorization = `Bearer ${token}`;\n    }\n  }\n\n    // Get All hotels\n    export const indexHotels = async () => {\n      const resp = await api.get('/hotels');  \n      console.log(resp)\n      return resp.data;\n    }\n    \n    //Hotels\n    //POST hotel\n    export const postHotel = async (postData) => {\n      const resp = await api.post('/hotels', postData);\n      return resp.data;\n    }\n    \n    // UPDATE hotel\n    export const putHotel= async (id, postData) => {\n      const resp = await api.put(`/hotels/${id}`, postData);\n      const hotel = {id: id, hotel_name: resp.data.data}\n      return hotel;\n    }\n\n  //Reservations\n  // Get All reservations\n  export const indexReservations = async (id) => {\n    const resp = await api.get(`/hotels/${id}/reservations`);\n    // console.log(resp.data);\n    return resp.data;\n  }\n  \n  //POST reservation\n  export const postReservation = async (id, postData) => {\n    console.log(id);\n    console.log(postData);\n    const resp = await api.post(`/hotels/${id}/reservations`, postData);\n    console.log(resp.data);\n    return resp.data;\n  }\n  \n  // UPDATE reservation\n  export const putReservation= async ( hotId ,resId,  postData) => {\n   \n    const resp = await api.put(`/hotels/${hotId }/reservations/${resId}/`, postData);\n    // const reservation = {resId: id, reservation_desc: resp.data.data}\n    console.log(resp.data);\n    // return reservation;\n    // return resp.data;\n    return resp.data\n  }\n\n    //Deletereservation\n    export const deleteReservation = async (res, hot) => {\n      // console.log(id);\n      // console.log(postData);\n      const resp = await api.delete(`/hotels/${hot}/reservations/${res}`);\n      console.log(resp.data);\n      return resp.data;\n    }","import React, { Component } from 'react';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport { Carousel } from 'react-responsive-carousel';\n\n class HotelCarousel extends Component {\n\n\n  render() {\n    return (\n      <Carousel showThumbs={false} infiniteLoop={true} emulateTouch showStatus={false} swipeable={true} autoPlay={true} dynamicHeight={true} useKeyboardArrows={true} centerMode={false} transitionTime={300}>\n        <div className=\"carousel-img\">\n          <img src=\"https://i.imgur.com/Fpv3xwr.jpg\" alt=\"hotel1\" />\n        </div>\n        <div className=\"carousel-img\">\n          <img src=\"https://i.imgur.com/0XgueCm.jpg\" alt=\"hotel1\" />\n        </div>\n        <div className=\"carousel-img\">\n          <img src=\"https://i.imgur.com/KVU0vm0.jpg\" alt=\"hotel2\" />\n        </div>\n        <div className=\"carousel-img\">\n          <img src=\"https://i.imgur.com/FmDrDXG.jpg\" alt=\"hotel3\" />\n        </div> \n        <div className=\"carousel-img\">\n          <img src=\"https://i.imgur.com/aD13Ssk.jpg\" alt=\"hotel3\" />\n        </div> \n        <div className=\"carousel-img\">\n          <img src=\"https://i.imgur.com/2V9odP2.jpg\" alt=\"hotel3\" />\n        </div> \n       \n      </Carousel>\n    );\n  }\n};\n\nexport default HotelCarousel ;","import React, { Component } from 'react';\nimport { Link, Route } from 'react-router-dom';\nimport { indexReservations, deleteReservation, putReservation } from '../services/api_helper';\nimport UpdateReservationForm from './ReservationForm';\n\n\nexport default class SingleHotel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentHotel: null,\n      reservations: [],\n      hotel_name: \"\",\n      test: false\n\n    }\n  }\n\n  setCurrentHotel = async () => {\n  }\n\n  componentDidMount = async () => {\n    if (this.props.hotels.length > 0) {\n      const currentHotel = this.props.hotels.find(hotel => parseInt(hotel.id) === parseInt(this.props.hotelId));\n      const reservations = await indexReservations(this.props.hotelId);\n      this.setState({\n        reservations,\n        currentHotel\n      });\n      // }else{\n      //   const newHotel = await this.props.createHotel(this.state.hotel_name);\n      //  this.setState({\n      //    currentHotel: newHotel\n      //  })\n\n\n    }\n  }\n\n  deleteRes = async (formData) => {\n    let reservation_id = formData.id\n    let hotel_id = formData.hotel_id\n    console.log(reservation_id)\n    let resp = await deleteReservation(reservation_id, hotel_id)\n  }\n  updateRes = async (formData) => {\n    let reservation_id = formData.id\n    let hotel_id = formData.hotel_id\n    console.log(reservation_id)\n    let resp = await putReservation(hotel_id, reservation_id, formData)\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.hotelId !== this.props.hotelId) {\n      this.setCurrentHotel();\n    }\n  }\n\n  render() {\n    // console.log(this.props);\n    // console.log(this.state.reservations);\n    return (\n      <div>\n        {this.state.currentHotel && (\n          <>\n            <h1>{this.state.currentHotel.hotel_name}</h1>\n            <h4>Your Reservation List </h4>\n            <Link to={`/hotels/${this.state.currentHotel.id}/Add`}>\n            </Link>\n            {this.state.reservations && this.state.reservations.map(reservation =>\n              <div className=\"resMetods\">\n                <p>{reservation.reservation_desc}</p>\n                <button onClick={() => this.deleteRes(reservation)}>DELETE</button>\n                {/* <a className=\"updateRes\" href={`/hotels/${this.props.hotelId}/reservations`}> */}\n                {/* <button onClick={()=> this.updateRes(reservation)}>UPDATE</button> */}\n                {/* </a> */}\n                {/* <Link to={`/hotels/${this.props.hotelId}/reservations`}>UPDATE</Link> */}\n                {/* <Link className=\"makeRes\" to={`/hotels/${this.props.hotelId}/reservations/${reservation.id}`}>Update Reservation</Link> */}\n               <button onClick={() => this.updateRes(reservation)}>\n                 <Link className=\"makeRes\" to={`/hotels/${this.props.hotelId}/reservations/${reservation.id}`}>Update Reservation</Link>\n                 </button>\n                 {/* UpdateReservationForm  */}\n               {/* </Link> */}\n              </div>\n            )}\n            \n             {/* <button onClick={() => this.props.createReservation(this.hotel_id, this.props.state)}> */}\n            <Link className=\"makeRes\" to={`/hotels/${this.props.hotelId}/reservations`}>Create Reservation</Link>\n            {/* <Link className=\"makeRes\" to={`/hotels/${this.props.hotelId}/reservations/${this.props.id}`}>Delete Reservation</Link> */}\n              {/* </button> */}\n          </>\n\n        )}\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport SingleHotel from './SingleHotel';\n\nexport default class ReservationForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      reservations: [{\n        reservation_desc: \"\",\n        room_type: \"\",\n        guest_no: \"\",\n        start_date: \"\",\n        end_date: \"\"\n      }]\n    }\n  }\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value })\n  }\n\n  render() {\n    console.log(this.props);\n    console.log(\"this is the reservation form\")\n    return (\n      <form className=\"reservationForm\" onSubmit={(e) => {\n        e.preventDefault();\n        this.props.createReservation(this.props.hotelId, this.state)\n        // this.props.deleteReservation(this.props.hotelId, this.state)\n      }}>\n        <label htmlFor=\"reservation_desc\">Reservation</label>\n        <input\n          type=\"text\"\n          name=\"reservation_desc\"\n          value={this.state.reservation_desc}\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"room_type\">Room_Type</label>\n        <input\n          type=\"text\"\n          name=\"room_type\"\n          value={this.state.room_type}\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"guest_no\">Room Guest</label>\n        <input\n          type=\"text\"\n          name=\"guest_no\"\n          value={this.state.guest_no}\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"start_date\">Start-Date</label>\n        <input\n          type=\"date\"\n          name=\"start_date\"\n          value={this.state.start_date}\n          onChange={this.handleChange}\n        />\n         <label htmlFor=\"end_date\">End-Date</label>\n        <input\n          type=\"date\"\n          name=\"end_date\"\n          value={this.state.end_date}\n          onChange={this.handleChange}\n        />\n        <button id=\"submitButton\">Submit</button>\n      </form>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { Route, withRouter, Switch } from 'react-router-dom';\nimport { indexReservations, postReservation, putReservation, verifyUser } from '../services/api_helper';\nimport ReservationForm from './ReservationForm';\n\n\n\nclass ReservationContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      reservations: [{\n        reservation_desc: \"\",\n        room_type: \"\",\n        guest_no: \"\",\n        start_date: \"\",\n        end_date: \"\"\n      }]\n    }\n  }\n\n  componentDidMount() {\n    verifyUser();\n    this.getAllReservations();\n  }\n\n\n  getAllReservations = async () => {\n    const reservations = await indexReservations();\n    this.setState({ reservations });\n  }\n\n\n  createReservation = async (id, reservationData) => {\n    // console.log(reservationData);\n    const newReservation = await postReservation(id, reservationData);\n    this.setState({\n      reservations: [...this.state.reservations, newReservation]\n    })\n    this.props.history.push(\"/hotels/:id/reservations\");\n  }\n\n  // deleteReservation = async (id, reservationData) => {\n  //   // console.log(reservationData);\n  //   const deleteReservation = await deleteReservation(id, reservationData);\n  //   this.setState({\n  //     reservations: [...this.state.reservations, deleteReservation]\n  //   })\n  //   this.props.history.push(\"/hotels/:id/reservations\");\n  // }\n  updateReservation = async (id, reservationData) => {\n    const updatedReservation = await putReservation(id, reservationData);\n    const changedReservations = this.state.hotels.map(hotel => parseInt(hotel.id) === parseInt(id) ? updatedReservation : hotel);\n    console.log(changedReservations);\n    this.setState({ reservations: changedReservations });\n    this.props.history.push(\"/hotels/:id/reservations\");\n  }\n\n  render() {\n    // console.log(this.props);\n    return (\n      <div>\n        {/* <Route exact path=\"/hotels/:id/reservations/:id\" render={(props) => (\n          <SingleReservation\n            reservationId={props.match.params.id}\n            reservations={this.state.reservations}\n          />\n        )} /> */}\n        <Route exact path=\"/hotels/:id/reservations\" render={(props) => (\n          <ReservationForm\n            createReservation={this.createReservation}\n            hotelId={props.match.params.id}\n          />\n        )} />\n          {/* <Route path=\"/hotels/:id/reservations/:id\" render={(props) => (\n          <ReservationForm\n          deleteReservation={this.deleteReservation}\n            hotelId={props.match.params.id}\n          />\n        )} /> */}\n        {/* <Route path=\"/hotels/:id/reservations/:id/edit\" render={(props) => (\n          <UpdateReservationForm\n            hotels={this.state.reservations}\n            updateReservations={this.updateReservation}\n            reservationsId={props.match.params.id}\n          />\n        )} /> */}\n      </div>\n    )\n  }\n}\n\nexport default withRouter(ReservationContainer);\n\n","import React, { Component } from 'react';\nimport { Link, Route } from 'react-router-dom';\nimport ReservationContainer from './ReservationContainer';\n\n\nexport default class CreateHotelList extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    console.log(this.props.hotels)\n    return (\n      <div>\n        <Link className=\"addHotel\" to=\"/hotels/new\"><button className=\"addHotelButton\">Add a Hotel To Your List</button></Link>\n        <div id=\"hotel-display\">\n\n          {this.props.hotels && this.props.hotels.map(hotel => (\n            <div key={hotel.id} className=\"hotelContainer\">\n              <Link to={`/hotels/${hotel.id}`}>\n                <img className=\"HotelImg\" src={hotel.img_url}></img>\n                <p className=\"hotellName\">{hotel.hotel_name}</p>\n                <Link to={`/hotels/${hotel.id}/reservations`}></Link>\n                {/* <p>{hotel.biography}</p> */}\n                <p>{hotel.city}, {hotel.state}, {hotel.zip_code}</p>\n              </Link>\n            </div>\n          ))}\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\n\n\nexport default class HotelForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hotels :[{\n      hotel_name: \"\",\n      city: \"\",\n      state: \"\",\n      zip_code: \"\",\n      biography: \"\",\n      img_url: \"\"\n    }]\n  }\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value })\n  }\n\n  render() {\n    return (\n      <div >\n      <form className=\"hotelForm\"  onSubmit={(e) => {\n        e.preventDefault();\n        this.props.createHotel(this.state)\n      }}>\n        <label htmlFor=\"hotel_name\">Hotel name</label>\n        <input\n          type=\"text\"\n          name=\"hotel_name\"\n          value={this.state.hotel_name}\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"city\">City</label>\n        <input\n          type=\"text\"\n          name=\"city\"\n          value={this.state.city}\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"state\">State</label>\n        <input\n          type=\"text\"\n          name=\"state\"\n          value={this.state.state}\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"zip_code\">Zip-code</label>\n        <input\n          type=\"text\"\n          name=\"zip_code\"\n          value={this.state.zip_code}\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"biography\">Biography</label>\n        <input\n          type=\"text\"\n          name=\"biography\"\n          value={this.state.biography}\n          onChange={this.handleChange}\n        />\n         <label htmlFor=\"img_url\">img_url</label>\n        <input className=\"HotelImg\" \n          type=\"text\"\n          name=\"img_url\"\n          value={this.state.img_url}\n          onChange={this.handleChange}\n        />\n        <button id=\"submitButton\">Submit</button>\n      </form>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { Route, withRouter, Switch } from 'react-router-dom';\nimport { indexHotels, postHotel , putHotel, verifyUser } from '../services/api_helper';\nimport CreateHotelList from './CreateHotelList';\nimport SingleHotel from './SingleHotel';\nimport HotelForm from './HotelForm';\n\n\nclass HotelContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hotels: [{\n      hotel_name: \"\",\n      city: \"\",\n      state: \"\",\n      zip_code: \"\",\n      biography: \"\",\n      img_url: \"\"\n      }]\n    }\n  }\n\n  componentDidMount() {\n     verifyUser();\n    this.getAllHotels();\n  }\n\n  getAllHotels = async () => {\n    const hotels = await indexHotels();\n    this.setState({ hotels});\n  }\n\n  createHotel = async (hotelData) => {\n    console.log(hotelData);\n    const newHotel = await postHotel(hotelData);\n    this.setState({\n      hotels: [...this.state.hotels, newHotel]\n    })\n    this.props.history.push(\"/hotels\");\n  }\n\n  render() {\n    return (\n      <div>\n        <Switch>\n          <Route exact path=\"/hotels\" render={() => (\n            <CreateHotelList\n              hotels={this.state.hotels}\n            />\n          )} />\n          <Route exact path=\"/hotels/new\" render={() => (\n            <HotelForm\n              createHotel={this.createHotel}\n            />\n          )} />\n          <Route exact path=\"/hotels/:id\" render={(props) => (\n            <SingleHotel\n              hotelId={props.match.params.id}\n              hotels={this.state.hotels}\n            />\n            \n          )} />\n        </Switch>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(HotelContainer);\n","import React from \"react\";\nconst Overview = () => {\n\n  return (\n    <div className=\"border\">\n      <h1 className=\"hours\">Overview</h1>\n      <div className=\"overviewContainer\">\n        <div className=\"leftSide\" >\n          <img className=\"imgClass\" src=\"https://i.imgur.com/3nuNGMZ.jpg\"></img>\n        </div>\n        <div className=\"rightSide\">\n          <p className=\"p3\">\n            Tayran has been Established in 1990, built in three locations namely Cairo in Egypt, Rome in Italy\n            and NYC in USA, helping our customers to get the best hotel reservation by focusing on\n            quality, luxurious yet affordable.\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default Overview;\n","import React, { Component } from \"react\";\nimport { Route, Link } from 'react-router-dom';\nimport HotelCarousel from './Carousel';\nimport HotelContainer from './HotelsContainer';\nimport { indexHotels } from '../services/api_helper';\nimport Overview from './Overview';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hotels: [{\n        hotel_name: \"\",\n        city: \"\",\n        state: \"\",\n        zip_code: \"\",\n        biography: \"\",\n        img_url: \"\"\n      }]\n    }\n\n  }\n  componentDidMount() {\n    this.getAllHotels();\n  }\n\n  getAllHotels = async () => {\n    const hotels = await indexHotels();\n    this.setState({ hotels });\n    console.log (hotels)\n  }\n  render() {\n    return (\n      <div>\n        <HotelCarousel />\n        <div id=\"hotel-display\">\n          {this.state.hotels.map(hotel => (\n            <div key={hotel.id} className=\"hotelContainer\">\n               <Link to={`/hotels/${hotel.id}`}> \n                <img className=\"HotelImg\" src={hotel.img_url}></img>\n                <p className=\"hotellName\">{hotel.hotel_name}</p>\n                {/* <Link to={`/hotels/${hotel.id}/reservations`}></Link> */}\n                {/* <p>{hotel.biography}</p> */}\n                <p>{hotel.city}, {hotel.state}, {hotel.zip_code}</p>\n              </Link>\n            </div>\n          ))}\n        </div> \n        \n        <Route path=\"/\" render={() => (<Overview />)} />\n\n        {/* <Overview /> */}\n      </div>\n\n    );\n  }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport {Link } from 'react-router-dom';\n\n\n\nexport default class LoginForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            password: \"\"\n        }\n    }\n    handleChange = (e) => {\n        const { name, value } = e.target;\n        this.setState({\n          [name]: value\n        })\n      }\n\n    render() {\n        return (\n            <form  className=\"LoginForm\" onSubmit={(e) => this.props.handleLogin(e, this.state)}>\n                <h2>Login</h2>\n                <label htmlFor=\"email\">email</label>\n                <input\n                    type=\"text\"\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.handleChange}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <input\n                    type=\"password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.handleChange}\n                />\n                <button id=\"submitButton\">Submit</button>\n                <Link to=\"/signup\">SignUp</Link>\n            </form>\n           \n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Link , Route} from \"react-router-dom\";\nimport LoginForm from './LoginForm';\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \n    };\n  }\n  render() {\n    return (\n      <div className=\"header\">\n\n  <img className=\"logo\" src=\"https://i.imgur.com/lrEC5HI.jpg\"></img>\n        <nav>\n              <Link to=\"/home\">Home</Link>\n              <Link to=\"/overview\">Overview</Link>\n              <Link to=\"/login\">Login/SignUp</Link> \n             \n        </nav> \n      </div>\n    );\n  }\n}\nexport default Header;\n","import React from 'react';\n\nfunction Footer(props) {\n  return (\n    <footer>\n      <div className=\"footer-img\">\n      <img className=\"logo2\" src=\"https://i.imgur.com/lrEC5HI.jpg\"/>\n      </div>\n      <div className=\"copyright\">\n        <p className=\"p4\">©2020 The Tayaran</p>\n        <p className=\"p4\">All rights reserved.</p>\n      </div>\n      <div className=\"contact\" id=\"contact\">\n        <h4>Contact Us</h4>\n        <p className=\"p4\">New York, NY 10014</p>\n        <p className=\"p4\">(333) 002-0001</p>\n        <p className=\"p4\">World@Tayaran.com</p>\n      </div>\n      <div className=\"social\">\n        <h4>Follow Us</h4>\n        <div className=\"icon\"><img src=\"/images/Icon_Facebook.svg\" alt=\"Facebook\" /></div>\n        <div className=\"icon\"><img src=\"/images/Icon_Instagram.svg\" alt=\"Instagram\" /></div>\n      </div>\n      <div id=\"contact-mobile\"></div>\n    </footer>\n  )\n}\n\nexport default Footer;","import React, { Component } from 'react';\n\n\n\nexport default class SignUpForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: \"\",\n            email: \"\",\n            password: \"\"\n        }\n    }\n    handleChange = (e) => {\n        const { name, value } = e.target;\n        this.setState({\n            [name]: value\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                {this.props.errorText && <p>{this.props.errorText}</p>}\n                <form className=\"SignForm\" onSubmit={(e) => this.props.handleRegister(e, this.state)}>\n                    <h2>SignUP</h2>\n                    <label htmlFor=\"name\">name</label>\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        value={this.state.name}\n                        onChange={this.handleChange}\n                    />\n                    <label htmlFor=\"email\">email</label>\n                    <input\n                        type=\"text\"\n                        name=\"email\"\n                        value={this.state.email}\n                        onChange={this.handleChange}\n                    />\n                    <label htmlFor=\"password\">password</label>\n                    <input\n                        type=\"password\"\n                        name=\"password\"\n                        value={this.state.password}\n                        onChange={this.handleChange}\n                    />\n                    <button id=\"submitButton\">Submit</button>\n                </form>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport SingleHotel from './SingleHotel';\n\nexport default class UpdateReservationForm extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            reservations: [{\n                reservation_desc: \"\",\n                room_type: \"\",\n                guest_no: \"\",\n                // start_date: \"\",\n                // end_date: \"\"\n            }]\n        }\n    }\n    handleChange = (e) => {\n        const { name, value } = e.target;\n        this.setState({ [name]: value })\n    }\n\n    render() {\n        return (\n            <form className=\"reservationForm\" onSubmit={(e) => {\n                e.preventDefault();\n                this.props.updateRes(this.props.hotelId, this.props.resId, this.state)\n                // this.props.deleteReservation(this.props.hotelId, this.state)\n            }}>\n                <label htmlFor=\"reservation_desc\">Reservation</label>\n                <input\n                    type=\"text\"\n                    name=\"reservation_desc\"\n                    value={this.state.reservation_desc}\n                    onChange={this.handleChange}\n                />\n                <label htmlFor=\"room_type\">Room_Type</label>\n                <input\n                    type=\"text\"\n                    name=\"room_type\"\n                    value={this.state.room_type}\n                    onChange={this.handleChange}\n                />\n                <label htmlFor=\"guest_no\">Room Guest</label>\n                <input\n                    type=\"text\"\n                    name=\"guest_no\"\n                    value={this.state.guest_no}\n                    onChange={this.handleChange}\n                />\n                <button id=\"submitButton\">Update</button>\n            </form>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { registerUser, verifyUser, loginUser, putReservation } from './services/api_helper';\nimport { Route, Link, Switch, withRouter } from 'react-router-dom';\nimport Home from './components/Home';\nimport Header from './components/Header';\nimport LoginForm from './components/LoginForm';\nimport Footer from './components/Footer';\n// import Overview from './components/Overview';\nimport ReservationContainer from './components/ReservationContainer';\nimport HotelContainer from './components/HotelsContainer';\nimport './App.css';\nimport SignUpForm from './components/SignUpForm';\nimport UpdateReservationForm from './components/UpdateReservationForm';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      currentUser: null,\n      errorText: \"\"\n    }\n  }\n\n  handleRegister = async (e, registerData) => {\n    e.preventDefault();\n    const currentUser = await registerUser(registerData);\n    if (!currentUser.errorMessage) {\n      this.setState({ currentUser });\n      this.props.history.push('/hotels');\n    } \n    // else {\n    //   this.setState({ errorText: currentUser.errorMessage })\n    // }\n  }\n\n  handleLogin = async (e, loginData) => {\n    e.preventDefault();\n    const currentUser = await loginUser(loginData);\n    this.setState({ currentUser });\n    this.props.history.push('/hotels');\n  }\n\n  handleLogout = () => {\n    this.setState({\n      currentUser: null\n    })\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('name');\n    localStorage.removeItem('email');\n  }\n\n  componentDidMount() {\n    verifyUser();\n    if (localStorage.getItem('authToken')) {\n      const name = localStorage.getItem('name');\n      const email = localStorage.getItem('email');\n      const user = { name, email };\n      user && this.setState({\n        currentUser: user\n\n      })\n    }\n  }\n\n  updateRes = async (hotel_id, reservation_id, formData) => {\n    console.log(reservation_id)\n    let resp = await putReservation(hotel_id, reservation_id, formData)\n  }\n\n  render() {\n\n    return (\n\n      <div className=\"App\">\n        <>\n          <Header />\n          <Route path=\"/login\" render={() => (\n            <LoginForm\n              handleLogin={this.handleLogin}\n            />\n          )} />\n          {this.state.currentUser ?\n            <div>\n              <h3>Hello, \n              {this.state.currentUser.name} \n              <button onClick={this.handleLogout} id=\"logoutButton\">Logout</button>\n              </h3>\n              {/* <button onClick={this.handleLogout} id=\"logoutButton\">Logout</button> */}\n              <Link className=\"addHotelList\" to=\"/hotels\">Your Hotel List</Link>\n              {/* <Route path=\"/hotels\" render={() => (<HotelContainer />)} /> */}\n              <ReservationContainer />\n            </div>\n            :\n            <div>\n              <Route path=\"/signup\" render={() => (\n                <SignUpForm\n                  handleRegister={this.handleRegister}\n                  errorText={this.state.errorText}\n                />\n              )} />\n            </div>\n          }\n          {/* <Route path=\"/overview\" render={() => (<Overview />)} /> */}\n          {/* <Route path=\"/hotels/:id/reservations\" render={() => (\n            <ReservationForm\n              createReservation={this.createReservation}\n            />)} /> */}\n          <Route exact path={`/hotels/:hotel_id/reservations/:res_id`}\n            render={(props) => <UpdateReservationForm\n              hotelId={props.match.params.hotel_id}\n              resId={props.match.params.res_id}\n              updateRes={this.updateRes}\n\n            />}\n          />\n          <Route path=\"/\" render={() => (<Home />)} />\n          <Route path=\"/hotels\" render={() => (<HotelContainer />)} />\n          {/* <Overview /> */}\n          <Footer />\n        </>\n      </div>\n    );\n  }\n}\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n<Router>\n<App />\n</Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}