{"ast":null,"code":"var _jsxFileName = \"/Users/omniaelglad/Desktop/ruby/Ruby_Project_4/reservation_deluxe/client/src/components/UpdateHotelForm.js\";\nimport React, { Component } from 'react';\nexport default class UpdateHotelForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setFormData = () => {\n      if (this.props.hotels.length) {\n        console.log(this.props.hotels);\n        const {\n          hotel_name\n        } = this.props.hotels.find(hotel => {\n          return parseInt(hotel.id) === parseInt(this.props.hotelId);\n        });\n        this.setState({\n          hotel_name\n        });\n      }\n    };\n\n    this.handleChange = e => {\n      const {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      hotel_name: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.setFormData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.hotels !== this.props.hotels) {\n      this.setFormData();\n    }\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        this.props.updateHotel(this.props.hotelId, this.state);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"hotel_name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Hotel\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"hotel_name\",\n      value: this.state.hotel_name,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/omniaelglad/Desktop/ruby/Ruby_Project_4/reservation_deluxe/client/src/components/UpdateHotelForm.js"],"names":["React","Component","UpdateHotelForm","constructor","props","setFormData","hotels","length","console","log","hotel_name","find","hotel","parseInt","id","hotelId","setState","handleChange","e","name","value","target","state","componentDidMount","componentDidUpdate","prevProps","render","preventDefault","updateHotel"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,eAAN,SAA8BD,SAA9B,CAAwC;AACrDE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,WARmB,GAQL,MAAM;AAClB,UAAI,KAAKD,KAAL,CAAWE,MAAX,CAAkBC,MAAtB,EAA8B;AAC5BC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWE,MAAvB;AACA,cAAM;AAAEI,UAAAA;AAAF,YAAiB,KAAKN,KAAL,CAAWE,MAAX,CAAkBK,IAAlB,CAAuBC,KAAK,IAAI;AACrD,iBAAOC,QAAQ,CAACD,KAAK,CAACE,EAAP,CAAR,KAAuBD,QAAQ,CAAC,KAAKT,KAAL,CAAWW,OAAZ,CAAtC;AACD,SAFsB,CAAvB;AAGA,aAAKC,QAAL,CAAc;AAACN,UAAAA;AAAD,SAAd;AACD;AACF,KAhBkB;;AAAA,SAsBnBO,YAtBmB,GAsBHC,CAAD,IAAO;AACpB,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkBF,CAAC,CAACG,MAA1B;AACA,WAAKL,QAAL,CAAc;AAAE,SAACG,IAAD,GAAQC;AAAV,OAAd;AACD,KAzBkB;;AAGjB,SAAKE,KAAL,GAAa;AACXZ,MAAAA,UAAU,EAAE;AADD,KAAb;AAGD;;AAYDa,EAAAA,iBAAiB,GAAG;AAClB,SAAKlB,WAAL;AACD;;AAODmB,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAIA,SAAS,CAACnB,MAAV,KAAqB,KAAKF,KAAL,CAAWE,MAApC,EAA4C;AAC1C,WAAKD,WAAL;AACD;AACF;;AAEDqB,EAAAA,MAAM,GAAG;AACP,WACE;AAAM,MAAA,QAAQ,EAAGR,CAAD,IAAO;AACrBA,QAAAA,CAAC,CAACS,cAAF;AACA,aAAKvB,KAAL,CAAWwB,WAAX,CAAuB,KAAKxB,KAAL,CAAWW,OAAlC,EAA2C,KAAKO,KAAhD;AACD,OAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAO,MAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,EAKE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,YAFP;AAGE,MAAA,KAAK,EAAE,KAAKA,KAAL,CAAWZ,UAHpB;AAIE,MAAA,QAAQ,EAAE,KAAKO,YAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,CADF;AAeD;;AAlDoD","sourcesContent":["import React, { Component } from 'react';\n\nexport default class UpdateHotelForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      hotel_name: \"\"\n    }\n  }\n\n  setFormData = () => {\n    if (this.props.hotels.length) {\n      console.log(this.props.hotels);\n      const { hotel_name } = this.props.hotels.find(hotel => {\n        return parseInt(hotel.id) === parseInt(this.props.hotelId)\n      })\n      this.setState({hotel_name})\n    }\n  }\n\n  componentDidMount() {\n    this.setFormData();\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.hotels !== this.props.hotels) {\n      this.setFormData();\n    }\n  }\n\n  render() {\n    return (\n      <form onSubmit={(e) => {\n        e.preventDefault();\n        this.props.updateHotel(this.props.hotelId, this.state)\n      }}>\n        <label htmlFor=\"hotel_name\">Hotel</label>\n        <input\n          type=\"text\"\n          name=\"hotel_name\"\n          value={this.state.hotel_name}\n          onChange={this.handleChange}\n        />\n        <button>Submit</button>\n      </form>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}