{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: \"http://localhost:3000\"\n}); //Login\n\nexport const loginUser = async loginData => {\n  const resp = await api.post('/auth/login', loginData);\n  console.log(resp);\n  api.defaults.headers.common.authorization = `Bearer ${resp.data.auth_token}`;\n  localStorage.setItem('authToken', resp.data.auth_token); // localStorage.setItem('name', resp.data.user.name);\n  // localStorage.setItem('email', resp.data.user.email);\n\n  return resp.data.user;\n}; //Register\n\nexport const registerUser = async registerData => {\n  // try{\n  const resp = await api.post('/signup', registerData);\n  api.defaults.headers.common.authorization = `Bearer ${resp.data.auth_token}`;\n  localStorage.setItem('authToken', resp.data.auth_token);\n  localStorage.setItem('name', resp.data.user.name);\n  localStorage.setItem('email', resp.data.user.email);\n  return resp.data.user; // }catch (e) {\n  //   console.log(e.response);\n  //   if (e.respose.status === 422) {\n  //     return {errorMessage: \"Email is already associated with a user, please login to continue\"}\n  //   }\n  // }\n}; //Verify user\n\nexport const verifyUser = () => {\n  const token = localStorage.getItem('authToken');\n\n  if (token) {\n    api.defaults.headers.common.authorization = `Bearer ${token}`;\n  }\n}; // Get All hotels\n\nexport const indexHotels = async () => {\n  const resp = await api.get('/hotels');\n  console.log(resp);\n  return resp.data;\n}; //Hotels\n//POST hotel\n\nexport const postHotel = async postData => {\n  const resp = await api.post('/hotels', postData);\n  return resp.data;\n}; // UPDATE hotel\n\nexport const putHotel = async (id, postData) => {\n  const resp = await api.put(`/hotels/${id}`, postData);\n  const hotel = {\n    id: id,\n    hotel_name: resp.data.data\n  };\n  return hotel;\n}; //Reservations\n// Get All reservations\n\nexport const indexReservations = async () => {\n  const resp = await api.get('/hotels/:id/reservations');\n  console.log(resp);\n  return resp;\n}; //POST reservation\n\nexport const postReservation = async postData => {\n  const resp = await api.post('/hotels/:id/reservations', postData);\n  return resp.data;\n}; // UPDATE reservation\n\nexport const putReservation = async (id, postData) => {\n  const resp = await api.put(`/reservations/${id}`, postData);\n  const reservation = {\n    id: id,\n    reservation_desc: resp.data.data\n  };\n  return reservation;\n};","map":{"version":3,"sources":["/Users/omniaelglad/Desktop/ruby/Ruby_Project_4/reservation_deluxe/client/src/services/api_helper.js"],"names":["axios","api","create","baseURL","loginUser","loginData","resp","post","console","log","defaults","headers","common","authorization","data","auth_token","localStorage","setItem","user","registerUser","registerData","name","email","verifyUser","token","getItem","indexHotels","get","postHotel","postData","putHotel","id","put","hotel","hotel_name","indexReservations","postReservation","putReservation","reservation","reservation_desc"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAa;AACrBC,EAAAA,OAAO,EAAE;AADY,CAAb,CAAZ,C,CAIA;;AACA,OAAO,MAAMC,SAAS,GAAG,MAAOC,SAAP,IAAqB;AAC1C,QAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,IAAJ,CAAS,aAAT,EAAwBF,SAAxB,CAAnB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAL,EAAAA,GAAG,CAACS,QAAJ,CAAaC,OAAb,CAAqBC,MAArB,CAA4BC,aAA5B,GAA6C,UAASP,IAAI,CAACQ,IAAL,CAAUC,UAAW,EAA3E;AACAC,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCX,IAAI,CAACQ,IAAL,CAAUC,UAA5C,EAJ0C,CAK1C;AACA;;AACA,SAAOT,IAAI,CAACQ,IAAL,CAAUI,IAAjB;AACD,CARI,C,CAWL;;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAMC,YAAN,IAAuB;AAC/C;AACE,QAAMd,IAAI,GAAG,MAAML,GAAG,CAACM,IAAJ,CAAS,SAAT,EAAoBa,YAApB,CAAnB;AACAnB,EAAAA,GAAG,CAACS,QAAJ,CAAaC,OAAb,CAAqBC,MAArB,CAA4BC,aAA5B,GAA6C,UAASP,IAAI,CAACQ,IAAL,CAAUC,UAAW,EAA3E;AACAC,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCX,IAAI,CAACQ,IAAL,CAAUC,UAA5C;AACAC,EAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BX,IAAI,CAACQ,IAAL,CAAUI,IAAV,CAAeG,IAA5C;AACAL,EAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BX,IAAI,CAACQ,IAAL,CAAUI,IAAV,CAAeI,KAA7C;AACA,SAAOhB,IAAI,CAACQ,IAAL,CAAUI,IAAjB,CAP6C,CAQ/C;AACA;AACA;AACA;AACA;AACA;AACH,CAdM,C,CAgBP;;AACA,OAAO,MAAMK,UAAU,GAAG,MAAM;AAC9B,QAAMC,KAAK,GAAGR,YAAY,CAACS,OAAb,CAAqB,WAArB,CAAd;;AACA,MAAID,KAAJ,EAAW;AACTvB,IAAAA,GAAG,CAACS,QAAJ,CAAaC,OAAb,CAAqBC,MAArB,CAA4BC,aAA5B,GAA6C,UAASW,KAAM,EAA5D;AACD;AACF,CALM,C,CAOL;;AACA,OAAO,MAAME,WAAW,GAAG,YAAY;AACrC,QAAMpB,IAAI,GAAG,MAAML,GAAG,CAAC0B,GAAJ,CAAQ,SAAR,CAAnB;AACAnB,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,SAAOA,IAAI,CAACQ,IAAZ;AACD,CAJM,C,CAMP;AACA;;AACA,OAAO,MAAMc,SAAS,GAAG,MAAOC,QAAP,IAAoB;AAC3C,QAAMvB,IAAI,GAAG,MAAML,GAAG,CAACM,IAAJ,CAAS,SAAT,EAAoBsB,QAApB,CAAnB;AACA,SAAOvB,IAAI,CAACQ,IAAZ;AACD,CAHM,C,CAKP;;AACA,OAAO,MAAMgB,QAAQ,GAAE,OAAOC,EAAP,EAAWF,QAAX,KAAwB;AAC7C,QAAMvB,IAAI,GAAG,MAAML,GAAG,CAAC+B,GAAJ,CAAS,WAAUD,EAAG,EAAtB,EAAyBF,QAAzB,CAAnB;AACA,QAAMI,KAAK,GAAG;AAACF,IAAAA,EAAE,EAAEA,EAAL;AAASG,IAAAA,UAAU,EAAE5B,IAAI,CAACQ,IAAL,CAAUA;AAA/B,GAAd;AACA,SAAOmB,KAAP;AACD,CAJM,C,CAMT;AACA;;AACA,OAAO,MAAME,iBAAiB,GAAG,YAAY;AAC3C,QAAM7B,IAAI,GAAG,MAAML,GAAG,CAAC0B,GAAJ,CAAQ,0BAAR,CAAnB;AACAnB,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,SAAOA,IAAP;AACD,CAJM,C,CAMP;;AACA,OAAO,MAAM8B,eAAe,GAAG,MAAOP,QAAP,IAAoB;AACjD,QAAMvB,IAAI,GAAG,MAAML,GAAG,CAACM,IAAJ,CAAS,0BAAT,EAAqCsB,QAArC,CAAnB;AACA,SAAOvB,IAAI,CAACQ,IAAZ;AACD,CAHM,C,CAKP;;AACA,OAAO,MAAMuB,cAAc,GAAE,OAAON,EAAP,EAAWF,QAAX,KAAwB;AACnD,QAAMvB,IAAI,GAAG,MAAML,GAAG,CAAC+B,GAAJ,CAAS,iBAAgBD,EAAG,EAA5B,EAA+BF,QAA/B,CAAnB;AACA,QAAMS,WAAW,GAAG;AAACP,IAAAA,EAAE,EAAEA,EAAL;AAASQ,IAAAA,gBAAgB,EAAEjC,IAAI,CAACQ,IAAL,CAAUA;AAArC,GAApB;AACA,SAAOwB,WAAP;AACD,CAJM","sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: \"http://localhost:3000\"\n})\n\n//Login\nexport const loginUser = async (loginData) => {\n    const resp = await api.post('/auth/login', loginData);\n    console.log(resp);\n    api.defaults.headers.common.authorization = `Bearer ${resp.data.auth_token}`;\n    localStorage.setItem('authToken', resp.data.auth_token);\n    // localStorage.setItem('name', resp.data.user.name);\n    // localStorage.setItem('email', resp.data.user.email);\n    return resp.data.user;\n  }\n\n\n  //Register\n\n  export const registerUser = async(registerData) => {\n      // try{\n        const resp = await api.post('/signup', registerData);\n        api.defaults.headers.common.authorization = `Bearer ${resp.data.auth_token}`;\n        localStorage.setItem('authToken', resp.data.auth_token);\n        localStorage.setItem('name', resp.data.user.name);\n        localStorage.setItem('email', resp.data.user.email);\n        return resp.data.user;\n      // }catch (e) {\n      //   console.log(e.response);\n      //   if (e.respose.status === 422) {\n      //     return {errorMessage: \"Email is already associated with a user, please login to continue\"}\n      //   }\n      // }\n  }\n\n  //Verify user\n  export const verifyUser = () => {\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      api.defaults.headers.common.authorization = `Bearer ${token}`;\n    }\n  }\n\n    // Get All hotels\n    export const indexHotels = async () => {\n      const resp = await api.get('/hotels');  \n      console.log(resp)\n      return resp.data;\n    }\n    \n    //Hotels\n    //POST hotel\n    export const postHotel = async (postData) => {\n      const resp = await api.post('/hotels', postData);\n      return resp.data;\n    }\n    \n    // UPDATE hotel\n    export const putHotel= async (id, postData) => {\n      const resp = await api.put(`/hotels/${id}`, postData);\n      const hotel = {id: id, hotel_name: resp.data.data}\n      return hotel;\n    }\n\n  //Reservations\n  // Get All reservations\n  export const indexReservations = async () => {\n    const resp = await api.get('/hotels/:id/reservations');\n    console.log(resp);\n    return resp;\n  }\n  \n  //POST reservation\n  export const postReservation = async (postData) => {\n    const resp = await api.post('/hotels/:id/reservations', postData);\n    return resp.data;\n  }\n  \n  // UPDATE reservation\n  export const putReservation= async (id, postData) => {\n    const resp = await api.put(`/reservations/${id}`, postData);\n    const reservation = {id: id, reservation_desc: resp.data.data}\n    return reservation;\n  }"]},"metadata":{},"sourceType":"module"}