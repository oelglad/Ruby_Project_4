{"ast":null,"code":"import _toConsumableArray from\"/Users/omniaelglad/Desktop/ruby/Ruby_Project_4/reservation_deluxe/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/Users/omniaelglad/Desktop/ruby/Ruby_Project_4/reservation_deluxe/client/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/omniaelglad/Desktop/ruby/Ruby_Project_4/reservation_deluxe/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/omniaelglad/Desktop/ruby/Ruby_Project_4/reservation_deluxe/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/omniaelglad/Desktop/ruby/Ruby_Project_4/reservation_deluxe/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/omniaelglad/Desktop/ruby/Ruby_Project_4/reservation_deluxe/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/omniaelglad/Desktop/ruby/Ruby_Project_4/reservation_deluxe/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/omniaelglad/Desktop/ruby/Ruby_Project_4/reservation_deluxe/client/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{Route,withRouter,Switch}from'react-router-dom';import{indexReservations,postReservation,putReservation,verifyUser}from'../services/api_helper';import ReservationForm from'./ReservationForm';var ReservationContainer=/*#__PURE__*/function(_Component){_inherits(ReservationContainer,_Component);function ReservationContainer(props){var _this;_classCallCheck(this,ReservationContainer);_this=_possibleConstructorReturn(this,_getPrototypeOf(ReservationContainer).call(this,props));_this.getAllReservations=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var reservations;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return indexReservations();case 2:reservations=_context.sent;_this.setState({reservations:reservations});case 4:case\"end\":return _context.stop();}}},_callee);}));_this.createReservation=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id,reservationData){var newReservation;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return postReservation(id,reservationData);case 2:newReservation=_context2.sent;_this.setState({reservations:[].concat(_toConsumableArray(_this.state.reservations),[newReservation])});_this.props.history.push(\"/hotels/:id/reservations\");case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x,_x2){return _ref2.apply(this,arguments);};}();_this.updateReservation=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id,reservationData){var updatedReservation,changedReservations;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return putReservation(id,reservationData);case 2:updatedReservation=_context3.sent;changedReservations=_this.state.hotels.map(function(hotel){return parseInt(hotel.id)===parseInt(id)?updatedReservation:hotel;});console.log(changedReservations);_this.setState({reservations:changedReservations});_this.props.history.push(\"/hotels/:id/reservations\");case 7:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3,_x4){return _ref3.apply(this,arguments);};}();_this.state={reservations:[{reservation_desc:\"\",room_type:\"\",guest_no:\"\",start_date:\"\",end_date:\"\"}]};return _this;}_createClass(ReservationContainer,[{key:\"componentDidMount\",value:function componentDidMount(){verifyUser();this.getAllReservations();}},{key:\"render\",value:function render(){var _this2=this;// console.log(this.props);\nreturn React.createElement(\"div\",null,React.createElement(Route,{exact:true,path:\"/hotels/:id/reservations\",render:function render(props){return React.createElement(ReservationForm,{createReservation:_this2.createReservation,hotelId:props.match.params.id});}}));}}]);return ReservationContainer;}(Component);export default withRouter(ReservationContainer);","map":{"version":3,"sources":["/Users/omniaelglad/Desktop/ruby/Ruby_Project_4/reservation_deluxe/client/src/components/ReservationContainer.js"],"names":["React","Component","Route","withRouter","Switch","indexReservations","postReservation","putReservation","verifyUser","ReservationForm","ReservationContainer","props","getAllReservations","reservations","setState","createReservation","id","reservationData","newReservation","state","history","push","updateReservation","updatedReservation","changedReservations","hotels","map","hotel","parseInt","console","log","reservation_desc","room_type","guest_no","start_date","end_date","match","params"],"mappings":"2uCAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,KAAT,CAAgBC,UAAhB,CAA4BC,MAA5B,KAA0C,kBAA1C,CACA,OAASC,iBAAT,CAA4BC,eAA5B,CAA6CC,cAA7C,CAA6DC,UAA7D,KAA+E,wBAA/E,CACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,C,GAIMC,CAAAA,oB,8EACJ,8BAAYC,KAAZ,CAAmB,sDACjB,sFAAMA,KAAN,GADiB,MAoBnBC,kBApBmB,sEAoBE,0KACQP,CAAAA,iBAAiB,EADzB,QACbQ,YADa,eAEnB,MAAKC,QAAL,CAAc,CAAED,YAAY,CAAZA,YAAF,CAAd,EAFmB,sDApBF,SA0BnBE,iBA1BmB,2FA0BC,kBAAOC,EAAP,CAAWC,eAAX,gKAEWX,CAAAA,eAAe,CAACU,EAAD,CAAKC,eAAL,CAF1B,QAEZC,cAFY,gBAGlB,MAAKJ,QAAL,CAAc,CACZD,YAAY,8BAAM,MAAKM,KAAL,CAAWN,YAAjB,GAA+BK,cAA/B,EADA,CAAd,EAGA,MAAKP,KAAL,CAAWS,OAAX,CAAmBC,IAAnB,CAAwB,0BAAxB,EANkB,wDA1BD,0EA2CnBC,iBA3CmB,2FA2CC,kBAAON,EAAP,CAAWC,eAAX,wLACeV,CAAAA,cAAc,CAACS,EAAD,CAAKC,eAAL,CAD7B,QACZM,kBADY,gBAEZC,mBAFY,CAEU,MAAKL,KAAL,CAAWM,MAAX,CAAkBC,GAAlB,CAAsB,SAAAC,KAAK,QAAIC,CAAAA,QAAQ,CAACD,KAAK,CAACX,EAAP,CAAR,GAAuBY,QAAQ,CAACZ,EAAD,CAA/B,CAAsCO,kBAAtC,CAA2DI,KAA/D,EAA3B,CAFV,CAGlBE,OAAO,CAACC,GAAR,CAAYN,mBAAZ,EACA,MAAKV,QAAL,CAAc,CAAED,YAAY,CAAEW,mBAAhB,CAAd,EACA,MAAKb,KAAL,CAAWS,OAAX,CAAmBC,IAAnB,CAAwB,0BAAxB,EALkB,wDA3CD,qEAGjB,MAAKF,KAAL,CAAa,CACXN,YAAY,CAAE,CAAC,CACbkB,gBAAgB,CAAE,EADL,CAEbC,SAAS,CAAE,EAFE,CAGbC,QAAQ,CAAE,EAHG,CAIbC,UAAU,CAAE,EAJC,CAKbC,QAAQ,CAAE,EALG,CAAD,CADH,CAAb,CAHiB,aAYlB,C,8FAEmB,CAClB3B,UAAU,GACV,KAAKI,kBAAL,GACD,C,uCAkCQ,iBACP;AACA,MACE,gCAOE,oBAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,0BAAlB,CAA6C,MAAM,CAAE,gBAACD,KAAD,QACnD,qBAAC,eAAD,EACE,iBAAiB,CAAE,MAAI,CAACI,iBAD1B,CAEE,OAAO,CAAEJ,KAAK,CAACyB,KAAN,CAAYC,MAAZ,CAAmBrB,EAF9B,EADmD,EAArD,EAPF,CADF,CA6BD,C,kCAnFgCf,S,EAsFnC,cAAeE,CAAAA,UAAU,CAACO,oBAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport { Route, withRouter, Switch } from 'react-router-dom';\nimport { indexReservations, postReservation, putReservation, verifyUser } from '../services/api_helper';\nimport ReservationForm from './ReservationForm';\n\n\n\nclass ReservationContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      reservations: [{\n        reservation_desc: \"\",\n        room_type: \"\",\n        guest_no: \"\",\n        start_date: \"\",\n        end_date: \"\"\n      }]\n    }\n  }\n\n  componentDidMount() {\n    verifyUser();\n    this.getAllReservations();\n  }\n\n\n  getAllReservations = async () => {\n    const reservations = await indexReservations();\n    this.setState({ reservations });\n  }\n\n\n  createReservation = async (id, reservationData) => {\n    // console.log(reservationData);\n    const newReservation = await postReservation(id, reservationData);\n    this.setState({\n      reservations: [...this.state.reservations, newReservation]\n    })\n    this.props.history.push(\"/hotels/:id/reservations\");\n  }\n\n  // deleteReservation = async (id, reservationData) => {\n  //   // console.log(reservationData);\n  //   const deleteReservation = await deleteReservation(id, reservationData);\n  //   this.setState({\n  //     reservations: [...this.state.reservations, deleteReservation]\n  //   })\n  //   this.props.history.push(\"/hotels/:id/reservations\");\n  // }\n  updateReservation = async (id, reservationData) => {\n    const updatedReservation = await putReservation(id, reservationData);\n    const changedReservations = this.state.hotels.map(hotel => parseInt(hotel.id) === parseInt(id) ? updatedReservation : hotel);\n    console.log(changedReservations);\n    this.setState({ reservations: changedReservations });\n    this.props.history.push(\"/hotels/:id/reservations\");\n  }\n\n  render() {\n    // console.log(this.props);\n    return (\n      <div>\n        {/* <Route exact path=\"/hotels/:id/reservations/:id\" render={(props) => (\n          <SingleReservation\n            reservationId={props.match.params.id}\n            reservations={this.state.reservations}\n          />\n        )} /> */}\n        <Route exact path=\"/hotels/:id/reservations\" render={(props) => (\n          <ReservationForm\n            createReservation={this.createReservation}\n            hotelId={props.match.params.id}\n          />\n        )} />\n          {/* <Route path=\"/hotels/:id/reservations/:id\" render={(props) => (\n          <ReservationForm\n          deleteReservation={this.deleteReservation}\n            hotelId={props.match.params.id}\n          />\n        )} /> */}\n        {/* <Route path=\"/hotels/:id/reservations/:id/edit\" render={(props) => (\n          <UpdateReservationForm\n            hotels={this.state.reservations}\n            updateReservations={this.updateReservation}\n            reservationsId={props.match.params.id}\n          />\n        )} /> */}\n      </div>\n    )\n  }\n}\n\nexport default withRouter(ReservationContainer);\n\n"]},"metadata":{},"sourceType":"module"}