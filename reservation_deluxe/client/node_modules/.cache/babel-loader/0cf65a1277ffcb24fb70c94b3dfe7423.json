{"ast":null,"code":"var _jsxFileName = \"/Users/omniaelglad/Desktop/ruby/Ruby_Project_4/reservation_deluxe/client/src/components/ReservationContainer.js\";\nimport React, { Component } from 'react';\nimport { Route, withRouter, Switch } from 'react-router-dom';\nimport { indexReservations, postReservation, putReservation, verifyUser } from '../services/api_helper';\nimport SingleReservation from './SingleReservation';\nimport ReservationForm from './ReservationForm';\nimport UpdateReservationForm from './UpdateReservationForm';\n\nclass ReservationContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getAllReservations = async () => {\n      const reservations = await indexReservations();\n      this.setState({\n        reservations\n      });\n    };\n\n    this.createReservation = async (id, reservationData) => {\n      // console.log(reservationData);\n      const newReservation = await postReservation(id, reservationData);\n      this.setState({\n        reservations: [...this.state.reservations, newReservation]\n      });\n      this.props.history.push(\"/hotels/:id/reservations\");\n    };\n\n    this.updateReservation = async (id, reservationData) => {\n      const updatedReservation = await putReservation(id, reservationData);\n      const changedReservations = this.state.hotels.map(hotel => parseInt(hotel.id) === parseInt(id) ? updatedReservation : hotel);\n      console.log(changedReservations);\n      this.setState({\n        reservations: changedReservations\n      });\n      this.props.history.push(\"/hotels/:id/reservations\");\n    };\n\n    this.state = {\n      reservations: [{\n        reservation_desc: \"\",\n        room_type: \"\",\n        guest_no: \"\",\n        start_date: \"\",\n        end_date: \"\"\n      }]\n    };\n  }\n\n  componentDidMount() {\n    verifyUser();\n    this.getAllReservations();\n  }\n\n  render() {\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/hotels/:id/reservations/:id\",\n      render: props => React.createElement(SingleReservation, {\n        reservationId: props.match.params.id,\n        reservations: this.state.reservations,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/hotels/:id/reservations\",\n      render: props => React.createElement(ReservationForm, {\n        createReservation: this.createReservation,\n        hotelId: props.match.params.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/hotels/:id/reservations/:id\",\n      render: props => React.createElement(ReservationForm, {\n        createReservation: this.createReservation,\n        hotelId: props.match.params.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/hotels/:id/reservations/:id/edit\",\n      render: props => React.createElement(UpdateReservationForm, {\n        hotels: this.state.reservations,\n        updateReservations: this.updateReservation,\n        reservationsId: props.match.params.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withRouter(ReservationContainer);","map":{"version":3,"sources":["/Users/omniaelglad/Desktop/ruby/Ruby_Project_4/reservation_deluxe/client/src/components/ReservationContainer.js"],"names":["React","Component","Route","withRouter","Switch","indexReservations","postReservation","putReservation","verifyUser","SingleReservation","ReservationForm","UpdateReservationForm","ReservationContainer","constructor","props","getAllReservations","reservations","setState","createReservation","id","reservationData","newReservation","state","history","push","updateReservation","updatedReservation","changedReservations","hotels","map","hotel","parseInt","console","log","reservation_desc","room_type","guest_no","start_date","end_date","componentDidMount","render","match","params"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Route, withRouter, Switch } from 'react-router-dom';\nimport { indexReservations, postReservation, putReservation, verifyUser } from '../services/api_helper';\nimport SingleReservation from './SingleReservation';\nimport ReservationForm from './ReservationForm';\nimport UpdateReservationForm from './UpdateReservationForm';\n\n\nclass ReservationContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      reservations: [{\n        reservation_desc: \"\",\n        room_type: \"\",\n        guest_no: \"\",\n        start_date: \"\",\n        end_date: \"\"\n      }]\n    }\n  }\n\n  componentDidMount() {\n    verifyUser();\n    this.getAllReservations();\n  }\n\n\n  getAllReservations = async () => {\n    const reservations = await indexReservations();\n    this.setState({ reservations });\n  }\n\n\n  createReservation = async (id, reservationData) => {\n    // console.log(reservationData);\n    const newReservation = await postReservation(id, reservationData);\n    this.setState({\n      reservations: [...this.state.reservations, newReservation]\n    })\n    this.props.history.push(\"/hotels/:id/reservations\");\n  }\n\n\n  updateReservation = async (id, reservationData) => {\n    const updatedReservation = await putReservation(id, reservationData);\n    const changedReservations = this.state.hotels.map(hotel => parseInt(hotel.id) === parseInt(id) ? updatedReservation : hotel);\n    console.log(changedReservations);\n    this.setState({ reservations: changedReservations });\n    this.props.history.push(\"/hotels/:id/reservations\");\n  }\n\n  render() {\n    console.log(this.props);\n    return (\n      <div>\n        <Route exact path=\"/hotels/:id/reservations/:id\" render={(props) => (\n          <SingleReservation\n            reservationId={props.match.params.id}\n            reservations={this.state.reservations}\n          />\n        )} />\n        <Route path=\"/hotels/:id/reservations\" render={(props) => (\n          <ReservationForm\n            createReservation={this.createReservation}\n            hotelId={props.match.params.id}\n          />\n        )} />\n          <Route path=\"/hotels/:id/reservations/:id\" render={(props) => (\n          <ReservationForm\n            createReservation={this.createReservation}\n            hotelId={props.match.params.id}\n          />\n        )} />\n        <Route path=\"/hotels/:id/reservations/:id/edit\" render={(props) => (\n          <UpdateReservationForm\n            hotels={this.state.reservations}\n            updateReservations={this.updateReservation}\n            reservationsId={props.match.params.id}\n          />\n        )} />\n      </div>\n    )\n  }\n}\n\nexport default withRouter(ReservationContainer);\n\n"]},"metadata":{},"sourceType":"module"}