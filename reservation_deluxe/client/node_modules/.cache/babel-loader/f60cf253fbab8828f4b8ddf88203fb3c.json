{"ast":null,"code":"var _jsxFileName = \"/Users/omniaelglad/Desktop/ruby/Ruby_Project_4/reservation_rest/client/src/App.js\";\nimport React, { Component } from 'react';\nimport { registerUser, verifyUser, loginUser } from './services/api_helper';\nimport { Route, Link, withRouter } from 'react-router-dom';\nimport Home from './components/Home'; // import Header from './components/Header';\n\nimport LoginForm from './components/LoginForm';\nimport Overview from './components/Overview';\nimport './App.css';\nimport SignUpForm from './components/SignUpForm';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleRegister = async (e, registerData) => {\n      e.preventDefault();\n      const currentUser = await registerUser(registerData);\n\n      if (!currentUser.errorMessage) {\n        this.setState({\n          currentUser\n        });\n        this.props.history.push('/reservations');\n      } else {\n        this.setState({\n          errorText: currentUser.errorMessage\n        });\n      }\n    };\n\n    this.handleLogin = async (e, loginData) => {\n      e.preventDefault();\n      const currentUser = await loginUser(loginData);\n      this.setState({\n        currentUser\n      });\n      this.props.history.push('/reservations');\n    };\n\n    this.handleLogout = () => {\n      this.setState({\n        currentUser: null\n      });\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('name');\n      localStorage.removeItem('email');\n    };\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      currentUser: null,\n      reservations: [],\n      errorText: \"\"\n    };\n  }\n\n  componentDidMount() {\n    verifyUser();\n\n    if (localStorage.getItem('authToken')) {\n      const name = localStorage.getItem('name');\n      const email = localStorage.getItem('email');\n      const user = {\n        name,\n        email\n      };\n      user && this.setState({\n        currentUser: user\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/login\",\n      render: () => React.createElement(LoginForm, {\n        handleLogin: this.handleLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/signup\",\n      render: () => React.createElement(SignUpForm, {\n        handleRegister: this.handleRegister,\n        errorText: this.state.errorText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Home, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(Overview, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/omniaelglad/Desktop/ruby/Ruby_Project_4/reservation_rest/client/src/App.js"],"names":["React","Component","registerUser","verifyUser","loginUser","Route","Link","withRouter","Home","LoginForm","Overview","SignUpForm","App","constructor","props","handleRegister","e","registerData","preventDefault","currentUser","errorMessage","setState","history","push","errorText","handleLogin","loginData","handleLogout","localStorage","removeItem","state","name","email","password","reservations","componentDidMount","getItem","user","render"],"mappings":"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","sourcesContent":["import React, { Component}from 'react';\nimport { registerUser, verifyUser, loginUser } from './services/api_helper';\nimport { Route, Link, withRouter } from 'react-router-dom';\nimport Home from './components/Home';\n// import Header from './components/Header';\nimport LoginForm from './components/LoginForm';\nimport Overview  from './components/Overview';\nimport './App.css';\nimport SignUpForm from './components/SignUpForm';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      currentUser: null,\n      reservations:[],\n      errorText: \"\"\n    }\n  }\n\n  handleRegister = async (e,  registerData) => {\n    e.preventDefault();\n    const currentUser = await registerUser(registerData);\n  if (!currentUser.errorMessage){\n    this.setState({ currentUser});\n     this.props.history.push('/reservations');\n  } else {\n    this.setState({errorText: currentUser.errorMessage})\n  }\n  }\n\n  handleLogin = async (e, loginData) => {\n    e.preventDefault();\n    const currentUser = await loginUser(loginData);\n    this.setState({ currentUser });\n    this.props.history.push('/reservations');\n  }\n\n  handleLogout = () => {\n    this.setState({\n      currentUser: null\n    })\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('name');\n    localStorage.removeItem('email');\n  }\n\n  componentDidMount() {\n    verifyUser();\n    if (localStorage.getItem('authToken')) {\n      const name = localStorage.getItem('name');\n      const email = localStorage.getItem('email');\n      const user = {name, email};\n      user && this.setState({\n        currentUser: user\n      })\n    }\n  }\n  render(){\n  return (\n    <div className=\"App\">\n\n        <Route path=\"/login\" render={() => (\n          <LoginForm\n          handleLogin={this.handleLogin}\n          />\n        )} />\n        <Route path=\"/signup\" render={() => (\n          <SignUpForm\n          handleRegister={this.handleRegister}\n          errorText={this.state.errorText}\n          />\n        )} />\n        {/* <Header\n         currentUser={this.state.currentUser}\n         handleLogout={this.handleLogout}\n         handleLogin={this.handleLogin}/> */}\n     <Home />\n     <Overview />\n    </div>\n  );\n}\n}\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}