{"ast":null,"code":"var _jsxFileName = \"/Users/omniaelglad/Desktop/ruby/Ruby_Project_4/reservation_deluxe/client/src/components/SingleHotel.js\";\nimport React, { Component } from 'react';\nimport { Link, Route } from 'react-router-dom';\nimport { indexReservations, deleteReservation, putReservation } from '../services/api_helper';\nimport UpdateReservationForm from './ReservationForm';\nexport default class SingleHotel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setCurrentHotel = async () => {};\n\n    this.componentDidMount = async () => {\n      if (this.props.hotels.length > 0) {\n        const currentHotel = this.props.hotels.find(hotel => parseInt(hotel.id) === parseInt(this.props.hotelId));\n        console.log(currentHotel);\n        const reservations = await indexReservations(this.props.hotelId);\n        this.setState({\n          reservations,\n          currentHotel\n        }); // }else{\n        //   const newHotel = await this.props.createHotel(this.state.hotel_name);\n        //  this.setState({\n        //    currentHotel: newHotel\n        //  })\n      }\n    };\n\n    this.deleteRes = async formData => {\n      console.log(formData);\n      let reservation_id = formData.id;\n      let hotel_id = formData.hotel_id;\n      console.log(reservation_id);\n      let resp = await deleteReservation(reservation_id, hotel_id);\n    };\n\n    this.updateRes = async formData => {\n      console.log(formData);\n      let reservation_id = formData.id;\n      let hotel_id = formData.hotel_id;\n      console.log(reservation_id);\n      let resp = await putReservation(hotel_id, reservation_id, formData);\n    };\n\n    this.state = {\n      currentHotel: null,\n      reservations: [],\n      hotel_name: \"\",\n      test: false\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.hotelId !== this.props.hotelId) {\n      this.setCurrentHotel();\n    }\n  }\n\n  render() {\n    console.log(this.props);\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.state.currentHotel && React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.state.currentHotel.hotel_name), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Your Reservation List \"), React.createElement(Link, {\n      to: `/hotels/${this.state.currentHotel.id}/Add`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), this.state.reservations && this.state.reservations.map(reservation => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, reservation.reservation_desc), React.createElement(\"button\", {\n      onClick: () => this.deleteRes(reservation),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"DELETE\"), React.createElement(\"button\", {\n      onClick: () => this.updateRes(reservation),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }))), React.createElement(Link, {\n      className: \"makeRes\",\n      to: `/hotels/${this.props.hotelId}/reservations`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Create Reservation\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/omniaelglad/Desktop/ruby/Ruby_Project_4/reservation_deluxe/client/src/components/SingleHotel.js"],"names":["React","Component","Link","Route","indexReservations","deleteReservation","putReservation","UpdateReservationForm","SingleHotel","constructor","props","setCurrentHotel","componentDidMount","hotels","length","currentHotel","find","hotel","parseInt","id","hotelId","console","log","reservations","setState","deleteRes","formData","reservation_id","hotel_id","resp","updateRes","state","hotel_name","test","componentDidUpdate","prevProps","render","map","reservation","reservation_desc"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link, Route } from 'react-router-dom';\nimport { indexReservations, deleteReservation, putReservation } from '../services/api_helper';\nimport UpdateReservationForm from './ReservationForm';\n\n\nexport default class SingleHotel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentHotel: null,\n      reservations: [],\n      hotel_name: \"\",\n      test: false\n\n    }\n  }\n\n  setCurrentHotel = async () => {\n  }\n\n  componentDidMount = async () => {\n    if (this.props.hotels.length > 0) {\n      const currentHotel = this.props.hotels.find(hotel => parseInt(hotel.id) === parseInt(this.props.hotelId));\n      console.log(currentHotel);\n      const reservations = await indexReservations(this.props.hotelId);\n      this.setState({\n        reservations,\n        currentHotel\n      });\n      // }else{\n      //   const newHotel = await this.props.createHotel(this.state.hotel_name);\n      //  this.setState({\n      //    currentHotel: newHotel\n      //  })\n\n\n    }\n  }\n\n  deleteRes = async (formData) => {\n    console.log(formData)\n    let reservation_id = formData.id\n    let hotel_id = formData.hotel_id\n    console.log(reservation_id)\n    let resp = await deleteReservation(reservation_id, hotel_id)\n  }\n  updateRes = async (formData) => {\n    console.log(formData)\n    let reservation_id = formData.id\n    let hotel_id = formData.hotel_id\n    console.log(reservation_id)\n    let resp = await putReservation(hotel_id, reservation_id, formData)\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.hotelId !== this.props.hotelId) {\n      this.setCurrentHotel();\n    }\n  }\n\n  render() {\n    console.log(this.props);\n    console.log(this.state);\n    return (\n      <div>\n        {this.state.currentHotel && (\n          <>\n            <h1>{this.state.currentHotel.hotel_name}</h1>\n            <h4>Your Reservation List </h4>\n            <Link to={`/hotels/${this.state.currentHotel.id}/Add`}>\n            </Link>\n            {this.state.reservations && this.state.reservations.map(reservation =>\n              <div>\n                <p>{reservation.reservation_desc}</p>\n                <button onClick={() => this.deleteRes(reservation)}>DELETE</button>\n                {/* <a className=\"updateRes\" href={`/hotels/${this.props.hotelId}/reservations`}> */}\n                {/* <button onClick={()=> this.updateRes(reservation)}>UPDATE</button> */}\n                {/* </a> */}\n                {/* <Link to={`/hotels/${this.props.hotelId}/reservations`}>UPDATE</Link> */}\n                {/* <Link className=\"makeRes\" to={`/hotels/${this.props.hotelId}/reservations`}>Update Reservation */}\n               <button onClick={() => this.updateRes(reservation)}>\n                 {/* <Link className=\"makeRes\" to={`/hotels/${this.props.hotelId}/reservations/${reservation.reservation_id}`}>Update Reservation</Link> */}\n                 </button>\n               {/* </Link> */}\n              </div>\n            )}\n\n            <Link className=\"makeRes\" to={`/hotels/${this.props.hotelId}/reservations`}>Create Reservation</Link>\n            {/* <Link className=\"makeRes\" to={`/hotels/${this.props.hotelId}/reservations/${this.props.id}`}>Delete Reservation</Link> */}\n\n            {/* )} /> */}\n          </>\n\n        )}\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}