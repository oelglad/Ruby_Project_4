{"ast":null,"code":"var _jsxFileName = \"/Users/omniaelglad/Desktop/ruby/Ruby_Project_4/reservation_deluxe/client/src/components/SingleHotel.js\";\nimport React, { Component } from 'react';\nimport { Link, Route } from 'react-router-dom';\nimport { indexReservations } from '../services/api_helper';\nimport ReservationForm from './ReservationForm';\nexport default class SingleHotel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setCurrentHotel = async () => {};\n\n    this.componentDidMount = async () => {\n      if (this.props.hotels.length > 0) {\n        const currentHotel = this.props.hotels.find(hotel => hotel.id === parseInt(this.props.hotelId));\n        const reservations = await indexReservations(currentHotel.id);\n        this.setState({\n          reservations,\n          currentHotel\n        }); // }else{\n        //   const newHotel = await this.props.createHotel(this.state.hotel_name);\n        //  this.setState({\n        //    currentHotel: newHotel\n        //  })\n      }\n    };\n\n    this.state = {\n      currentHotel: null,\n      reservations: [],\n      hotel_name: \"\"\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.hotelId !== this.props.hotelId) {\n      this.setCurrentHotel();\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.state.currentHotel && React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.state.currentHotel.hotel_name), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Your Reservation List \"), React.createElement(Link, {\n      to: `/hotels/${this.state.currentHotel.id}/Add`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), this.state.reservations && this.state.reservations.map(reservation => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, reservation.reservation_desc))), React.createElement(Link, {\n      className: \"makeRes\",\n      to: `/hotels//reservations`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Make a New Reservation\"), React.createElement(Route, {\n      path: \"/hotels/:id/reservations/new\",\n      render: () => React.createElement(ReservationForm, {\n        createReservation: this.createReservation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/omniaelglad/Desktop/ruby/Ruby_Project_4/reservation_deluxe/client/src/components/SingleHotel.js"],"names":["React","Component","Link","Route","indexReservations","ReservationForm","SingleHotel","constructor","props","setCurrentHotel","componentDidMount","hotels","length","currentHotel","find","hotel","id","parseInt","hotelId","reservations","setState","state","hotel_name","componentDidUpdate","prevProps","render","map","reservation","reservation_desc","createReservation"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,kBAA5B;AACA,SAASC,iBAAT,QAAkC,wBAAlC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,eAAe,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AACjDM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,eAXmB,GAWD,YAAY,CAC7B,CAZkB;;AAAA,SAcnBC,iBAdmB,GAcC,YAAY;AAC9B,UAAI,KAAKF,KAAL,CAAWG,MAAX,CAAkBC,MAAlB,GAA2B,CAA/B,EAAkC;AAChC,cAAMC,YAAY,GAAG,KAAKL,KAAL,CAAWG,MAAX,CAAkBG,IAAlB,CAAuBC,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAaC,QAAQ,CAAC,KAAKT,KAAL,CAAWU,OAAZ,CAArD,CAArB;AACA,cAAMC,YAAY,GAAG,MAAMf,iBAAiB,CAACS,YAAY,CAACG,EAAd,CAA5C;AACA,aAAKI,QAAL,CAAc;AACZD,UAAAA,YADY;AAEZN,UAAAA;AAFY,SAAd,EAHgC,CAOlC;AACA;AACA;AACA;AACA;AAGC;AACF,KA9BkB;;AAGjB,SAAKQ,KAAL,GAAa;AACXR,MAAAA,YAAY,EAAE,IADH;AAEXM,MAAAA,YAAY,EAAE,EAFH;AAGXG,MAAAA,UAAU,EAAE;AAHD,KAAb;AAMD;;AAuBDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAIA,SAAS,CAACN,OAAV,KAAsB,KAAKV,KAAL,CAAWU,OAArC,EAA8C;AAC5C,WAAKT,eAAL;AACD;AACF;;AAEDgB,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKJ,KAAL,CAAWR,YAAX,IACC,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKQ,KAAL,CAAWR,YAAX,CAAwBS,UAA7B,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFF,EAGE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,WAAU,KAAKD,KAAL,CAAWR,YAAX,CAAwBG,EAAG,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAKG,KAAKK,KAAL,CAAWF,YAAX,IAA2B,KAAKE,KAAL,CAAWF,YAAX,CAAwBO,GAAxB,CAA4BC,WAAW,IACnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,WAAW,CAACC,gBAAhB,CADF,CAD4B,CAL9B,EAUE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,SAAhB;AAA0B,MAAA,EAAE,EAAG,uBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAVF,EAWE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,8BAAZ;AAA2C,MAAA,MAAM,EAAE,MACnD,oBAAC,eAAD;AACA,QAAA,iBAAiB,EAAE,KAAKC,iBADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CAFJ,CADF;AAwBD;;AAhEgD","sourcesContent":["import React, { Component } from 'react';\nimport { Link, Route } from 'react-router-dom';\nimport { indexReservations } from '../services/api_helper';\nimport ReservationForm from './ReservationForm';\n\nexport default class SingleHotel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentHotel: null,\n      reservations: [],\n      hotel_name: \"\"\n\n    }\n  }\n\n  setCurrentHotel = async () => {\n  }\n\n  componentDidMount = async () => {\n    if (this.props.hotels.length > 0) {\n      const currentHotel = this.props.hotels.find(hotel => hotel.id === parseInt(this.props.hotelId));\n      const reservations = await indexReservations(currentHotel.id);\n      this.setState({ \n        reservations,\n        currentHotel\n      });\n    // }else{\n    //   const newHotel = await this.props.createHotel(this.state.hotel_name);\n    //  this.setState({\n    //    currentHotel: newHotel\n    //  })\n        \n    \n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.hotelId !== this.props.hotelId) {\n      this.setCurrentHotel();\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.currentHotel && (\n          <>\n            <h1>{this.state.currentHotel.hotel_name}</h1>\n            <h4>Your Reservation List </h4>\n            <Link to={`/hotels/${this.state.currentHotel.id}/Add`}>\n            </Link>\n            {this.state.reservations && this.state.reservations.map(reservation =>\n            <div>\n              <p>{reservation.reservation_desc}</p>\n              </div>\n            )}\n            <Link className=\"makeRes\" to={`/hotels//reservations`}>Make a New Reservation</Link>\n            <Route path=\"/hotels/:id/reservations/new\" render={() => (\n            <ReservationForm\n            createReservation={this.createReservation}\n          />\n        )} />\n          </>\n          \n        )}\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}