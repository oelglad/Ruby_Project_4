{"ast":null,"code":"var _jsxFileName = \"/Users/omniaelglad/Desktop/ruby/Ruby_Project_4/reservation_deluxe/client/src/App.js\";\nimport React, { Component } from 'react';\nimport { registerUser, verifyUser, loginUser, putReservation } from './services/api_helper';\nimport { Route, Link, Switch, withRouter } from 'react-router-dom';\nimport Home from './components/Home';\nimport Header from './components/Header';\nimport LoginForm from './components/LoginForm';\nimport Footer from './components/Footer';\nimport Overview from './components/Overview';\nimport ReservationContainer from './components/ReservationContainer';\nimport HotelContainer from './components/HotelsContainer';\nimport './App.css';\nimport SignUpForm from './components/SignUpForm';\nimport UpdateReservationForm from './components/UpdateReservationForm';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleRegister = async (e, registerData) => {\n      e.preventDefault();\n      const currentUser = await registerUser(registerData); // console.log(currentUser)\n\n      if (!currentUser.errorMessage) {\n        this.setState({\n          currentUser\n        });\n        this.props.history.push('/hotels');\n      } // } else {\n      //   this.setState({ errorText: currentUser.errorMessage })\n      // }\n\n    };\n\n    this.handleLogin = async (e, loginData) => {\n      e.preventDefault();\n      const currentUser = await loginUser(loginData);\n      this.setState({\n        currentUser\n      });\n      this.props.history.push('/hotels');\n    };\n\n    this.handleLogout = () => {\n      this.setState({\n        currentUser: null\n      });\n      localStorage.removeItem('authToken');\n      localStorage.removeItem('name');\n      localStorage.removeItem('email');\n    };\n\n    this.updateRes = async (hotel_id, reservation_id, formData) => {\n      console.log(reservation_id);\n      let resp = await putReservation(hotel_id, reservation_id, formData);\n    };\n\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      currentUser: null,\n      errorText: \"\"\n    };\n  }\n\n  componentDidMount() {\n    verifyUser();\n\n    if (localStorage.getItem('authToken')) {\n      const name = localStorage.getItem('name');\n      const email = localStorage.getItem('email');\n      const user = {\n        name,\n        email\n      };\n      user && this.setState({\n        currentUser: user\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(React.Fragment, null, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/login\",\n      render: () => React.createElement(LoginForm, {\n        handleLogin: this.handleLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), this.state.currentUser ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Hello,\", this.state.currentUser.name), React.createElement(\"button\", {\n      onClick: this.handleLogout,\n      id: \"logoutButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Logout\"), React.createElement(Link, {\n      className: \"addHotel\",\n      to: \"/hotels\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Hotels\"), React.createElement(Route, {\n      path: \"/hotels\",\n      render: () => React.createElement(HotelContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(ReservationContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/signup\",\n      render: () => React.createElement(SignUpForm, {\n        handleRegister: this.handleRegister,\n        errorText: this.state.errorText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(Route, {\n      exact: true,\n      path: `/hotels/:hotel_id/reservations/:res_id`,\n      render: props => React.createElement(UpdateReservationForm, {\n        hotelId: props.match.params.hotel_id,\n        resId: props.match.params.res_id,\n        updateRes: this.updateRes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/\",\n      render: () => React.createElement(Home, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(Overview, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withRouter(App);","map":{"version":3,"sources":["/Users/omniaelglad/Desktop/ruby/Ruby_Project_4/reservation_deluxe/client/src/App.js"],"names":["React","Component","registerUser","verifyUser","loginUser","putReservation","Route","Link","Switch","withRouter","Home","Header","LoginForm","Footer","Overview","ReservationContainer","HotelContainer","SignUpForm","UpdateReservationForm","App","constructor","props","handleRegister","e","registerData","preventDefault","currentUser","errorMessage","setState","history","push","handleLogin","loginData","handleLogout","localStorage","removeItem","updateRes","hotel_id","reservation_id","formData","console","log","resp","state","name","email","password","errorText","componentDidMount","getItem","user","render","match","params","res_id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { registerUser, verifyUser, loginUser, putReservation } from './services/api_helper';\nimport { Route, Link, Switch, withRouter } from 'react-router-dom';\nimport Home from './components/Home';\nimport Header from './components/Header';\nimport LoginForm from './components/LoginForm';\nimport Footer from './components/Footer';\nimport Overview from './components/Overview';\nimport ReservationContainer from './components/ReservationContainer';\nimport HotelContainer from './components/HotelsContainer';\nimport './App.css';\nimport SignUpForm from './components/SignUpForm';\nimport UpdateReservationForm from './components/UpdateReservationForm';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      currentUser: null,\n      errorText: \"\"\n    }\n  }\n\n  handleRegister = async (e, registerData) => {\n    e.preventDefault();\n    const currentUser = await registerUser(registerData);\n    // console.log(currentUser)\n    if (!currentUser.errorMessage) {\n      this.setState({ currentUser });\n      this.props.history.push('/hotels');\n    }\n    // } else {\n    //   this.setState({ errorText: currentUser.errorMessage })\n    // }\n  }\n\n  handleLogin = async (e, loginData) => {\n    e.preventDefault();\n    const currentUser = await loginUser(loginData);\n    this.setState({ currentUser });\n    this.props.history.push('/hotels');\n  }\n\n  handleLogout = () => {\n    this.setState({\n      currentUser: null\n    })\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('name');\n    localStorage.removeItem('email');\n  }\n\n  componentDidMount() {\n    verifyUser();\n    if (localStorage.getItem('authToken')) {\n      const name = localStorage.getItem('name');\n      const email = localStorage.getItem('email');\n      const user = { name, email };\n      user && this.setState({\n        currentUser: user\n\n      })\n    }\n  }\n\n  updateRes = async (hotel_id, reservation_id, formData) => {\n    console.log(reservation_id)\n    let resp = await putReservation(hotel_id, reservation_id, formData)\n  }\n\n  render() {\n\n    return (\n\n      <div className=\"App\">\n        <>\n          <Header />\n          <Route path=\"/login\" render={() => (\n            <LoginForm\n              handleLogin={this.handleLogin}\n            />\n          )} />\n          {this.state.currentUser ?\n            <div>\n              <h3>Hello, \n              {this.state.currentUser.name}\n              </h3>\n              <button onClick={this.handleLogout} id=\"logoutButton\">Logout</button>\n              <Link className=\"addHotel\" to=\"/hotels\">Hotels</Link>\n              <Route path=\"/hotels\" render={() => (<HotelContainer />)} />\n              <ReservationContainer />\n            </div>\n            :\n            <div>\n              <Route path=\"/signup\" render={() => (\n                <SignUpForm\n                  handleRegister={this.handleRegister}\n                  errorText={this.state.errorText}\n                />\n              )} />\n            </div>\n          }\n          {/* <Route path=\"/overview\" render={() => (<Overview />)} /> */}\n          {/* <Route path=\"/hotels/:id/reservations\" render={() => (\n            <ReservationForm\n              createReservation={this.createReservation}\n            />)} /> */}\n          <Route exact path={`/hotels/:hotel_id/reservations/:res_id`}\n            render={(props) => <UpdateReservationForm\n              hotelId={props.match.params.hotel_id}\n              resId={props.match.params.res_id}\n              updateRes={this.updateRes}\n\n            />}\n          />\n          <Route path=\"/\" render={() => (<Home />)} />\n          <Overview />\n          <Footer />\n        </>\n      </div>\n    );\n  }\n}\nexport default withRouter(App);\n"]},"metadata":{},"sourceType":"module"}